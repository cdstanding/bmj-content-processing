<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet 
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    exclude-result-prefixes="xs" 
    version="2.0">
    
    
    <xsl:output indent="no" method="xml"/>
    <!-- Removed to retain spaces in xrefs for Sean's biblio ref separation in extyles_tweak xslt -->
    <!--<xsl:strip-space elements="*"/>-->
    
    <!--Put content of acknowledegments into a variable for use later-->
    <!--\\\\\\\\\\\\\\\\\\-->
    <xsl:variable name="ack">
        <xsl:copy-of select="//back[1]/ack[1]/*"/>
    </xsl:variable>
    
    <!--Identity transform-->
    <!--\\\\\\\\\\\\\\\\\\-->
    <xsl:template match="@*|node()">
        <xsl:copy>
            <xsl:apply-templates select="@*|node()"/>
        </xsl:copy>
    </xsl:template>
    <!--\\\\\\\\\\\\\\\\\\-->
    
    
    <!-- Change to schema declaration to point to NLM 2.3 DTD-->
    <!--\\\\\\\\\\\\\\\\\\-->
    <xsl:template match="article/@dtd-version">
        <xsl:attribute name="dtd-version">2.3</xsl:attribute>
    </xsl:template>
    
    <xsl:template match="article/@xsi:noNamespaceSchemaLocation">
        <xsl:attribute name="xsi:noNamespaceSchemaLocation">http://dtd.nlm.nih.gov/publishing/2.3/xsd/journalpublishing.xsd</xsl:attribute>
    </xsl:template>
    <!--\\\\\\\\\\\\\\\\\\-->
    
    <!--Remove cols-->
    <xsl:template match="col"/>
    
    <!--Journal meta construction-->
    <!--\\\\\\\\\\\\\\\\\\\\\\\\\-->
    <xsl:template match="article/front/journal-meta/journal-id[@journal-id-type='publisher-id']"/>
    
    <xsl:template match="article/front/journal-meta/journal-id[@journal-id-type='hwp']">
        <journal-id journal-id-type="publisher-id">
            <xsl:value-of select="."/>
        </journal-id>
    </xsl:template>
    
    <xsl:template match="article/front/journal-meta/journal-title-group">
        <journal-title>
            <xsl:value-of select="journal-title"/>
        </journal-title>
    </xsl:template>
    <!--\\\\\\\\\\\\\\\\\\\\\\\\\-->
    
    
    <!--Orcid ID output-->
    <!--\\\\\\\\\\\\\\\-->
    <xsl:template match="article/front/article-meta/contrib-group/contrib/contrib-id">
        <xsl:comment select="."/>
    </xsl:template>
    <!--\\\\\\\\\\\\\\-->
    
    <!-- Abstract removal as this is autogenerated in the FO PDF. This can be added again in the preview.-->
    <xsl:template match="article/front/article-meta/abstract/title"/>
    <!--\\\\\\\\\\\\\\-->
    
    <!-- Abstract change from <sec> to <p> -->
    <xsl:template match="article/front/article-meta/abstract/sec">
        <p><bold><xsl:apply-templates select="title/node()"/></bold>&#x00A0;<xsl:apply-templates select="p/node()"/></p>
    </xsl:template>
    <!--\\\\\\\\\\\\\\-->
    
    
    <!-- Acknlowledgement removal to make NLM XML the same as all previous NLM XML that has gone through top Highwire -->
    <xsl:template match="ack">
    <xsl:choose>
        <xsl:when test=".[ancestor::back/notes/fn-group]">
        <!-- do nothing see fn-group[ancestor:back] template-->
            </xsl:when>
        <xsl:when test=".[ancestor::back/notes]">
            <!-- do nothing see notes[ancestor:back] template-->
        </xsl:when>
        <xsl:otherwise>
            <!-- Need to add the footnote-->
            
            <notes>
                <fn-group>
                    <fn>
                        <xsl:apply-templates select="$ack/*"/>
                    </fn>
                </fn-group>
            </notes>
        </xsl:otherwise>
    </xsl:choose>
    </xsl:template>
    
    <!--  Add acknowledgement as fn-group if there are notes (but not in data-supplement notes)  -->
    <xsl:template match="notes[ancestor::back][not(@notes-type='data-supplement')]">
        <notes>
            <xsl:if test="string-length($ack) !=0 and not(.//fn-group)">
                <fn-group>
                    <fn>
                        <xsl:apply-templates select="$ack/*"/>
                    </fn>
                </fn-group>
            </xsl:if>
            <xsl:apply-templates/>
        </notes>
    </xsl:template>
    
        
    <!--  Replace the acknowledgement into the footnotes section -->
    
    <xsl:template match="fn-group[ancestor::back]">
        <fn-group>
            <xsl:if test="string-length($ack) !=0">
                <fn>
                    <xsl:apply-templates select="$ack/*"/>
                </fn>
            </xsl:if>
            <xsl:apply-templates/>
        </fn-group>
    </xsl:template>
    <!--\\\\\\\\\\-->
    
    
    <!--Boxed text-->
    <xsl:template match="boxed-text[ancestor::body]">
        <xsl:if test=".[caption]">
            <boxed-text>
                <xsl:attribute name="position">float</xsl:attribute>
                <xsl:copy-of select="@*"/><!--Copying ID attributes disabled as this causes issues with FO PDF creation.
            This may need to be re-introduced and disabled in a later transformation at the creation of the FO PDF-->
                <sec>
                    <title>
                        <xsl:if test="label">
                            <xsl:value-of select="label"/>:&#x00A0;</xsl:if>
                        <xsl:apply-templates select="caption/title/node()"/>
                    </title>
                    <xsl:apply-templates select="caption/following-sibling::*[not(self::fn-group)]"/>
                </sec>
                <xsl:copy-of select="fn-group"/>
            </boxed-text>
        </xsl:if>
        <xsl:if test=".[not(caption)]">
            <boxed-text>
                <xsl:attribute name="position">float</xsl:attribute>
                <xsl:copy-of select="@*"/>
                <xsl:apply-templates select="*[not(self::fn-group)]"/>
                <xsl:copy-of select="fn-group"/>
            </boxed-text>
        </xsl:if>
    </xsl:template>
    <!--\\\\\\\\\\-->
    
    
    <!-- Figure label. Remove <label> and place text in <bold> within <p> within <caption> -->
    
    
    <xsl:template match="fig">
        <fig>
            <xsl:copy-of select="@*"/>
            <xsl:if test="caption">
            <caption>
                <p>
                    <xsl:if test="label">
                        <bold><xsl:value-of select="label"/></bold><xsl:text>&#x00A0;</xsl:text>
                    </xsl:if>
                    <xsl:apply-templates select="caption/p[1]/node()"/>
                </p>
                <xsl:apply-templates select="caption/p[1]/following-sibling::node()"/>
            </caption>
                <xsl:apply-templates select="caption/following-sibling::node()"/>
            </xsl:if>
            <xsl:if test="not(caption)">
                <xsl:apply-templates/>
            </xsl:if>
        </fig>
    </xsl:template>
    
    
    <!-- Open access licence statement. Change from <license-p> to <p> -->
    <xsl:template match="license-p">
        <p><xsl:apply-templates select="./node()"/></p>
    </xsl:template>
    
    
    <!-- Table footnotes -->
    <xsl:template match="//table-wrap-foot/fn">
        <p>
            <xsl:if test="label">
                <xsl:value-of select="label"/>
            </xsl:if>
            <xsl:apply-templates select="p[1]/node()"/>
        </p>
        <xsl:apply-templates select="p[1]/following-sibling::*"/>
    </xsl:template>
    <!--\\\\\\\\\\-->
    
    
    <!--Ref-lists-->
    <!--\\\\\\\\\-->
    <xsl:template match="article/back/ref-list/ref/mixed-citation">
        <citation>
            <xsl:attribute name="citation-type">
                <xsl:value-of select="@publication-type"/>
            </xsl:attribute>
            <xsl:apply-templates/>
        </citation>
    </xsl:template>
    
    <xsl:template match="article-title[ancestor::mixed-citation]">
        <xsl:apply-templates/>
    </xsl:template>
    
    <xsl:template match="chapter-title">
        <xsl:apply-templates/>
    </xsl:template>
    
    <xsl:template match="collab[parent::person-group]">
        <xsl:text>&#x00A0;</xsl:text>
        <xsl:apply-templates/>
    </xsl:template>
    
    <xsl:template match="date[parent::mixed-citation]">
        <xsl:apply-templates/>
    </xsl:template>
    
    <!-- This needs to be looked into when using JATS as the source for all content streams -->
    <xsl:template match="etal">
        <xsl:if test=".[not(following-sibling::node())]">
            <xsl:text>et al</xsl:text>
        </xsl:if>
        <xsl:if test=".[following-sibling::node()]">
            <xsl:text>et al.</xsl:text>
        </xsl:if>
    </xsl:template>
    
    <xsl:template match="date-in-citation[parent::mixed-citation]">
        <xsl:apply-templates/>
    </xsl:template>
        
    <xsl:template match="name[ancestor::mixed-citation]">
        <xsl:apply-templates/>
        <xsl:if test=".[following-sibling::name]|.[following-sibling::etal]">
            <xsl:text>,&#x00A0;</xsl:text>
        </xsl:if>
        <xsl:if test=".[following-sibling::collab][not(following-sibling::name)][not(following-sibling::etal)]">
            <xsl:text>.</xsl:text>
        </xsl:if>
    </xsl:template>
    
    <xsl:template match="name[ancestor::mixed-citation]/surname">
        <xsl:apply-templates/>
        <xsl:text>&#x00A0;</xsl:text>
    </xsl:template>
    
    <xsl:template match="name[ancestor::mixed-citation]/given-names">
        <xsl:apply-templates/>
    </xsl:template>
    
    <xsl:template match="person-group">
        <xsl:apply-templates/>
    </xsl:template>
    
    <xsl:template match="pub-id[ancestor::mixed-citation][@pub-id-type='doi']">
        <xsl:element name="ext-link">
            <xsl:attribute name="xlink:href">
                <xsl:text>http://dx.doi.org/</xsl:text><xsl:value-of select="text()/substring-after(.,'doi:')"/>
            </xsl:attribute>
            <xsl:attribute name="ext-link-type">
                <xsl:text>uri</xsl:text>
            </xsl:attribute>
            <xsl:value-of select="."/>
        </xsl:element>
    </xsl:template>
    
    <xsl:template match="pub-id[ancestor::mixed-citation][@pub-id-type='pmid']">
        <xsl:if test=".[preceding-sibling::pub-id]">
            <xsl:text>&#x00A0;</xsl:text>
        </xsl:if>
        <xsl:element name="ext-link">
            <xsl:attribute name="xlink:href">
                <xsl:text>http://www.ncbi.nlm.nih.gov/pubmed/?term=</xsl:text><xsl:value-of select="text()"/>
            </xsl:attribute>
            <xsl:attribute name="ext-link-type">
                <xsl:text>uri</xsl:text>
            </xsl:attribute>
            <xsl:text>pmid:</xsl:text>
            <xsl:value-of select="."/>
        </xsl:element>
        <xsl:text>.</xsl:text>
    </xsl:template>
    
    <xsl:template match="publisher-loc[parent::mixed-citation]">
        <xsl:apply-templates/>
    </xsl:template>
    
    <xsl:template match="publisher-name[parent::mixed-citation]">
        <xsl:apply-templates/>
    </xsl:template>
    
    <xsl:template match="string-name">
        <xsl:apply-templates/>
    </xsl:template>
    
    <xsl:template match="suffix[ancestor::mixed-citation]">
        <xsl:if test=".[not(parent::name/following-sibling::name)]">
            <xsl:text>&#x00A0;</xsl:text>
            <xsl:apply-templates/>
        </xsl:if>
        <xsl:if test=".[parent::name/following-sibling::name]">
            <xsl:text>&#x00A0;</xsl:text>
            <xsl:apply-templates/>
            <xsl:text>,&#x00A0;</xsl:text>
        </xsl:if>
    </xsl:template>
    
    <xsl:template match="trans-title[ancestor::mixed-citation]">
        <xsl:text>&#x00A0;</xsl:text>
        <xsl:apply-templates/>
    </xsl:template>
    
    <xsl:template match="year[parent::mixed-citation]">
        <year>
            <xsl:apply-templates/>
        </year>
    </xsl:template>
    <!--\\\\\\\\\-->
    
    
    <xsl:template match="related-article[not(@related-article-type='corrected-article')]">
        <related-article>
            <xsl:copy-of select="@*"/>
            <xsl:attribute name="ext-link-type">
                <xsl:value-of select="ext-link/@ext-link-type"/>
            </xsl:attribute>
            <xsl:attribute name="xlink:href">
                <xsl:value-of select="ext-link/@xlink:href"/>
            </xsl:attribute>
            <xsl:attribute name="xlink:type">
                <xsl:text>simple</xsl:text>
            </xsl:attribute>
            <xsl:value-of select="node()"/>
        </related-article>
    </xsl:template>
    
    
    <!-- Supplementary material change to place HREF back in <supplementary-material> -->
    
    
    <!-- Commented out to revert back to JATS output. <media> tag can 
        potentially be used now that publishing processes are outside of CMS-->
    
    <!--<xsl:template match="supplementary-material/media"/>
    
    <xsl:template match="supplementary-material[media]">
        <supplementary-material>
            <xsl:attribute name="xlink:href">
                <xsl:value-of select="media/@xlink:href"/>
            </xsl:attribute>
            <xsl:apply-templates/>
        </supplementary-material>
    </xsl:template>-->
    <!--\\\\\\\\\-->
    
    <!--XREF changes to take text out of XREF tag for correct rendition in FO PDF-->
    <xsl:template match="xref[@ref-type='table']">
        <xsl:value-of select="text()"/>
        <xref>
            <xsl:copy-of select="@*"/>
        </xref>
    </xsl:template>
    
    <xsl:template match="xref[@ref-type='table-fn']">
        <sup><xsl:value-of select="self::node()"/></sup>
    </xsl:template>
    
    <xsl:template match="xref[@ref-type='fig']">
        <xsl:value-of select="text()"/>
        <xref>
            <xsl:copy-of select="@*"/>
        </xref>
    </xsl:template>
    
    <xsl:template match="xref[@ref-type='boxed-text']">
        <xsl:value-of select="text()"/>
    </xsl:template>
    <!--\\\\\\\\\-->
    
    
</xsl:stylesheet>
